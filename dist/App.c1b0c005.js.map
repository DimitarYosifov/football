{"version":3,"sources":["js/Background.js","js/Config.js","js/gameLevel/Card.js","js/LineUps.js","js/gameLevel/LevelCardsSet.js","js/gameLevel/Block.js","js/gameLevel/Row.js","js/gameLevel/Grid.js","js/Level.js","js/Stage.js","js/LogIn.js","js/App.mjs"],"names":["Background","PIXI","Container","constructor","app","data","bgData","stage","createBG","gamePhase","background","Texture","fromImage","bgTexture","bg","Sprite","position","x","bg_x","y","bg_y","width","bg_width","height","bg_height","visible","addChild","rendererResolution","window","devicePixelRatio","hasLogin","mainFont","addTeam","fadeTimeBetweenPhases","gridHasMask","isGridInDebug","debugGrid","Card","config","font_size","index","stats","cardTexture","card_height","card_width","card_x","card_y","shoeTexture","shoe_height","shoe_width","shoe_x","shoe_y","attack_text","defense_text","gloveTexture","glove_height","glove_width","glove_x","glove_y","border_height","border_width","border_x","border_y","colors","createCard","cardImg","shoe","tint","attack_color","glove","defense_color","border","Graphics","lineStyle","drawRect","attackValuesText","Text","attack_current","attack_full","fontFamily","fontSize","fill","align","stroke","strokeThickness","set","anchor","defenseValuesText","defense_current","defense_full","name","increasePoints","matches","defenceColor","attackColor","def_points","filter","e","type","length","atk_points","initialScaleX","scale","initialScaley","text","TweenMax","to","delay","onComplete","yoyo","repeat","def_text","parent","ease","Linear","easeNone","alpha","removeChild","atk_text","LineUps","clubName1","clubName2","onPlayerCardsData","clubName","secondTeam","$","ajax","url","contentType","JSON","stringify","players","success","res","console","log","opponent","clubData","player","error","alert","testClub1","special","player_img_id","testClub2","opponent_img_id","LevelCardsSet","dataRecieved","targetDeck","lineUps","createPlayerDeck","createOpponentDeck","stageWidth","stageHeight","interactive","i","card","Block","row","col","rowContainer","grid","gridPosition_x","gridPosition_y","onDragStart","onDragMove","onDragEnd","Config","moveCoordinates","startX","startY","lastX","lastY","create","figureMissing","img","generateRandomColorBlock","createNonMatchingGrid","blockTexture","blockImg","buttonMode","grid_h","grid_w","block_w","block_h","grid_y","grid_x","globalBlocksPositions","push","setTimeout","on","a","Math","floor","random","_row","_col","checkUp","children","checkLeft","Row","rowId","block","blocks","Grid","global","dragging","animationInProgress","dist","directions","left","right","up","down","arr","Object","values","max","dir","keys","find","key","swapBlocks","level","gridArrays","createGrid","map","c","block1_x","block1_y","swapDirection","blockBeingSwappedWith","item1","item2","itemOneOldImg","itemTwoOldImg","selectedBlock","oldX","oldY","type1","gridPosition1","gridPosition","checkGridForMatches","m","beingSwapped","matchingSwappedItem","item_2_Old_X","item_2_Old_Y","item_2_OldType","texture","gatherMatchingBlocks","delayedCall","increaseCardsPointsAfterMatch","match","thisBlock","nextBlock_right1","nextBlock_right2","prevBlock_left1","prevBlock_left2","nextBlock_down1","nextBlock_down2","prevBlock_Up1","prevBlock_Up2","nullifyMatchesInGridArray","arrTypes","Set","typeItems","centralItem","thisColorMatches","targetBlock","tweenTarget","newX","newY","item","playerTurn","cardIdx","playerCards","tweenDownMatchingBlocks","checkAutomaticMatch","holesInColumns","holes","onRow","forEach","rowIndex","colIndex","el","shouldFall","h","createNewBlocks","blockHeight","gridY","hole","setAccurateBlocksPositions","table","Level","proton","playerCardsContainer","opponentCardsContainer","opponentCards","Stage","settings","RESOLUTION","SCALE_MODE","SCALE_MODES","NEAREST","canvas","document","getElementById","resolutiion","innerHeight","innerWidth","renderer","resize","autoDetectRenderer","transparent","resolution","view","autoResize","autoDensity","antialias","LINEAR","animationLoop","render","requestAnimationFrame","setup","loader","add","load","onresize","LogIn","action","enableInputs","register","opacity","login","username","password","style","pointerEvents","validate","wrapper","picked","go","value","querySelector","marginBottom","oninput","inputLength","addEventListener","goPressed","loginPressed","registerPressed","display","user","pass","nameInUse","clearUserInput","authorized","localStorage","setItem","storageItem","removeChildren","startLevel","killAll","remove","App","onload","storageData","getItem","checkUserData","getLevel"],"mappings":"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","file":"App.c1b0c005.js","sourceRoot":"..","sourcesContent":["export default class Background extends PIXI.Container{\r\n\r\n    constructor(app, data) {\r\n        super();\r\n        this.bgData = data\r\n        this.stage = app.stage;\r\n        this.createBG();\r\n    }\r\n\r\n    createBG() {\r\n        this.stage.gamePhase = this.bgData.gamePhase;\r\n        let background = PIXI.Texture.fromImage(this.bgData.bgTexture);\r\n        let bg = new PIXI.Sprite(background);\r\n        bg.position.x = this.bgData.bg_x;\r\n        bg.position.y = this.bgData.bg_y;\r\n        bg.width = this.bgData.bg_width;\r\n        bg.height = this.bgData.bg_height;\r\n        this.visible = true;\r\n        this.addChild(bg);\r\n    }\r\n}","export default {\r\n    rendererResolution: window.devicePixelRatio,\r\n    hasLogin: false,              //skip login phase ...for tests\r\n    mainFont: 'Girassol',\r\n    addTeam: false,                //for tests and adding teams to DB\r\n    fadeTimeBetweenPhases: 0.5,   //visibility  delay between game phases\r\n    gridHasMask: true,            // UNUSED!!!\r\n    isGridInDebug: false,         // predetermened grid for debug\r\n    debugGrid: [\r\n        [\"ball_purple\", \"ball_red\", \"ball_purple\", \"ball_green\", \"ball_blue\", \"ball_red\"],\r\n        [\"ball_red\", \"ball_purple\", \"ball_purple\", \"ball_blue\", \"ball_green\", \"ball_blue\"],\r\n        [\"ball_green\", \"ball_purple\", \"ball_purple\", \"ball_yellow\", \"ball_green\", \"ball_green\"],\r\n        [\"ball_orange\", \"ball_blue\", \"ball_purple\", \"ball_purple\", \"ball_red\", \"ball_green\"],\r\n        [\"ball_red\", \"ball_red\", \"ball_green\", \"ball_red\", \"ball_green\", \"ball_red\"],\r\n        [\"ball_green\", \"ball_red\", \"ball_green\", \"ball_green\", \"ball_red\", \"ball_orange\"],\r\n        [\"ball_red\", \"ball_orange\", \"ball_red\", \"ball_red\", \"ball_purple\", \"ball_red\"],\r\n        [\"ball_blue\", \"ball_red\", \"ball_red\", \"ball_yellow\", \"ball_blue\", \"ball_red\"]\r\n    ]\r\n}","import config from \"../Config.js\";\r\n\r\nexport default class Card extends PIXI.Container {\r\n    constructor(data) {\r\n\r\n        super();\r\n\r\n        this.config = config;\r\n        this.font_size = data.font_size;\r\n        this.index = data.index;\r\n        this.stats = data.stats;\r\n        this.cardTexture = data.cardTexture;\r\n        this.card_height = data.card_height;\r\n        this.card_width = data.card_width;\r\n        this.card_x = data.card_x;\r\n        this.card_y = data.card_y;\r\n\r\n        this.shoeTexture = data.shoeTexture;\r\n        this.shoe_height = data.shoe_height;\r\n        this.shoe_width = data.shoe_width;\r\n        this.shoe_x = data.shoe_x;\r\n        this.shoe_y = data.shoe_y;\r\n\r\n        this.attack_text = data.attack_text;\r\n        this.defense_text = data.defense_text;\r\n\r\n        this.gloveTexture = data.gloveTexture;\r\n        this.glove_height = data.glove_height;\r\n        this.glove_width = data.glove_width;\r\n        this.glove_x = data.glove_x;\r\n        this.glove_y = data.glove_y;\r\n\r\n        this.border_height = data.border_height;\r\n        this.border_width = data.border_width;\r\n        this.border_x = data.border_x;\r\n        this.border_y = data.border_y;\r\n\r\n        this.colors = {\r\n            'FF1D00': \"ball_red\",     // RED:\r\n            '3052FF': \"ball_blue\",    // BLUE:\r\n            '2F7F07': \"ball_green\",   // GREEN:\r\n            'E2D841': \"ball_yellow\",  // YELLOW:\r\n            'FF9702': \"ball_orange\",  // ORANGE\r\n            'B200FF': \"ball_purple\"   // PURPLE:\r\n        }\r\n\r\n        this.createCard();\r\n    }\r\n\r\n    createCard() {\r\n\r\n        // this = new PIXI();\r\n        this.index = this.index;\r\n\r\n        //stats            \r\n        this.stats = this.stats;\r\n\r\n        //card background\r\n        let cardTexture = PIXI.Texture.fromImage(this.cardTexture);\r\n        this.cardImg = new PIXI.Sprite(cardTexture);\r\n        this.cardImg.x = this.card_x;\r\n        this.cardImg.y = this.card_y;\r\n        this.cardImg.width = this.card_width;\r\n        this.cardImg.height = this.card_height;\r\n\r\n        //attack section\r\n        let shoeTexture = PIXI.Texture.fromImage(this.shoeTexture);\r\n        this.shoe = new PIXI.Sprite(shoeTexture);\r\n        this.shoe.x = this.shoe_x;\r\n        this.shoe.y = this.shoe_y;\r\n        this.shoe.width = this.shoe_width;\r\n        this.shoe.height = this.shoe_height;\r\n        this.shoe.tint = '0x' + this.stats.attack_color;\r\n\r\n        //defense section\r\n        let gloveTexture = PIXI.Texture.fromImage(this.gloveTexture);\r\n        this.glove = new PIXI.Sprite(gloveTexture);\r\n        this.glove.x = this.glove_x;\r\n        this.glove.y = this.glove_y;\r\n        this.glove.width = this.glove_width;\r\n        this.glove.height = this.glove_height\r\n        this.glove.tint = '0x' + this.stats.defense_color;\r\n\r\n        //border\r\n        this.border = new PIXI.Graphics();\r\n        this.border.lineStyle(1, 0xd0c639, 1);\r\n        this.border.drawRect(this.border_x, this.border_y, this.border_width, this.border_height);\r\n\r\n        //add children\r\n        this.addChild(this.cardImg);\r\n\r\n        this.attackValuesText = new PIXI.Text(this.stats.attack_current + '/' + this.stats.attack_full, {\r\n            fontFamily: this.config.mainFont,\r\n            fontSize: this.font_size,\r\n            fill: '#' + this.stats.attack_color, align: 'center',\r\n            stroke: '#000000',\r\n            strokeThickness: 4\r\n        });\r\n        this.attackValuesText.position.set(this.attack_text.x, this.attack_text.y);\r\n        this.attackValuesText.anchor.x = 1;\r\n\r\n        this.defenseValuesText = new PIXI.Text(this.stats.defense_current + '/' + this.stats.defense_full, {\r\n            fontFamily: this.config.mainFont,\r\n            fontSize: this.font_size,\r\n            fill: '#' + this.stats.defense_color, align: 'center',\r\n            stroke: '#000000',\r\n            strokeThickness: 4\r\n        });\r\n        this.defenseValuesText.position.set(this.defense_text.x, this.defense_text.y);\r\n        this.defenseValuesText.anchor.x = 1;\r\n\r\n        this.attackValuesText.name = \"attackValuesText\";\r\n        this.defenseValuesText.name = \"defenseValuesText\";\r\n\r\n        this.addChild(this.attackValuesText);\r\n        this.addChild(this.defenseValuesText);\r\n\r\n        this.addChild(this.shoe);\r\n        this.addChild(this.glove);\r\n        this.addChild(this.border);\r\n        //        TweenMax.delayedCall(1, () => {\r\n        //            TweenMax.to(this, 0.5, {alpha: 1});\r\n        //        })\r\n        //        console.log(this);\r\n    }\r\n\r\n    increasePoints(matches) {\r\n\r\n        let defenceColor = this.colors[this.stats.defense_color];\r\n        let attackColor = this.colors[this.stats.attack_color];\r\n        let def_points = matches.filter(e => e.type === defenceColor).length;\r\n        let atk_points = matches.filter(e => e.type === attackColor).length;\r\n\r\n        let initialScaleX = this.cardImg.scale.x;\r\n        let initialScaley = this.cardImg.scale.y;\r\n\r\n        if (def_points > 0) {\r\n            this.stats.defense_current += def_points;\r\n            this.defenseValuesText.text = `${this.stats.defense_current}/${this.stats.defense_full}`;\r\n            this.cardImg.tint = \"0x\" + this.stats.defense_color;\r\n            TweenMax.to(this.cardImg, .15, {\r\n                delay: .7,\r\n                onComplete: () => {\r\n                    this.cardImg.tint = 16777215\r\n                }\r\n            });\r\n\r\n            TweenMax.to(this.cardImg.scale, .15, {\r\n                x: initialScaleX * 1.05,\r\n                y: initialScaley * 1.05,\r\n                yoyo: true,\r\n                repeat: 1\r\n            })\r\n\r\n            //TODO  create separate class for this and add some delay between text tweens\r\n            let def_text = new PIXI.Text(\"+\" + def_points, {\r\n                fontFamily: this.config.mainFont,\r\n                fontSize: this.cardImg.height / 2,\r\n                fill: '#' + this.stats.defense_color,\r\n                align: 'center',\r\n                stroke: '#000000',\r\n                strokeThickness: 3\r\n            });\r\n            def_text.position.set(this.cardImg.x + this.cardImg.width / 2, this.cardImg.y + this.cardImg.height / 2);\r\n            def_text.anchor.x = 0.5;\r\n            def_text.anchor.y = 0.5;\r\n\r\n            this.parent.parent.addChild(def_text);// TODO add picture to +3 for example!!!\r\n\r\n            TweenMax.to(def_text, 1.5, {\r\n                y: this.parent.parent.height / 2,\r\n                // alpha: 0.75,\r\n                ease: Linear.easeNone,  //TODO... change ease\r\n                onComplete: () => {\r\n                    def_text.alpha = 0;\r\n                    this.parent.parent.removeChild(def_text);\r\n                }\r\n            })\r\n        }\r\n\r\n        if (atk_points > 0) {\r\n            this.stats.attack_current += atk_points;\r\n            this.attackValuesText.text = `${this.stats.attack_current}/${this.stats.attack_full}`;\r\n            this.cardImg.tint = \"0x\" + this.stats.attack_color;\r\n            TweenMax.to(this.cardImg, .15, {\r\n                delay: .7,\r\n                onComplete: () => {\r\n                    this.cardImg.tint = 16777215\r\n                }\r\n            });\r\n            TweenMax.to(this.cardImg.scale, .15, {\r\n                x: initialScaleX * 1.05,\r\n                y: initialScaley * 1.05,\r\n                yoyo: true,\r\n                repeat: 1\r\n            })\r\n\r\n            //TODO  create separate class for this and add some delay between text tweens\r\n            let atk_text = new PIXI.Text(\"+\" + atk_points, {\r\n                fontFamily: this.config.mainFont,\r\n                fontSize: this.cardImg.height / 2,\r\n                fill: '#' + this.stats.attack_color,\r\n                align: 'center',\r\n                stroke: '#000000',\r\n                strokeThickness: 3\r\n            });\r\n            atk_text.position.set(this.cardImg.x + this.cardImg.width / 2, this.cardImg.y + this.cardImg.height / 2);\r\n            atk_text.anchor.x = 0.5;\r\n            atk_text.anchor.y = 0.5;\r\n\r\n            this.parent.parent.addChild(atk_text);// TODO add picture to +3 for example!!!\r\n\r\n            TweenMax.to(atk_text, 1.5, {\r\n                y: this.parent.parent.height / 2,\r\n                // alpha: 0.75,\r\n                ease: Linear.easeNone,  //TODO... change ease\r\n                onComplete: () => {\r\n                    atk_text.alpha = 0;\r\n                    this.parent.parent.removeChild(atk_text);\r\n                }\r\n            })\r\n        }\r\n        // //TODO... => add opponent points same as player in the function above\r\n        // //TODO... => add yellow card, red card ana injury.....\r\n        // //TODO... => check for full attack or defence\r\n        // //TODO... => add sort of animations to show card gained points...\r\n        // //TODO... => check if card wins with two colors\r\n    }\r\n}\r\n","import config from \"./Config.js\";\r\n\r\nexport default class LineUps {\r\n    constructor(clubName1, clubName2, onPlayerCardsData) {\r\n\r\n        this.onPlayerCardsData = onPlayerCardsData;\r\n        this.clubName2 = clubName2;\r\n        this.testClub1 = [\r\n            {\r\n                defense_current: 0,\r\n                defense_color: \"FF1D00\",\r\n                defense_full: 20,\r\n                attack_current: 0,\r\n                attack_color: \"B200FF\",\r\n                attack_full: 20,\r\n                special: null,\r\n                position: \"GK\",\r\n                player_img_id: '011'\r\n            },\r\n            {\r\n                defense_current: 0,\r\n                defense_color: \"B200FF\",\r\n                defense_full: 20,\r\n                attack_current: 0,\r\n                attack_color: \"2F7F07\",\r\n                attack_full: 20,\r\n                special: null,\r\n                position: \"DF1\",\r\n                player_img_id: '001'\r\n            },\r\n            {\r\n                defense_current: 0,\r\n                defense_color: \"FF1D00\",\r\n                defense_full: 20,\r\n                attack_current: 0,\r\n                attack_color: \"3052FF\",\r\n                attack_full: 20,\r\n                special: null,\r\n                position: \"DF2\",\r\n                player_img_id: '007'\r\n            },\r\n            {\r\n                defense_current: 0,\r\n                defense_color: \"FF9702\",\r\n                defense_full: 20,\r\n                attack_current: 0,\r\n                attack_color: \"FF9702\",\r\n                attack_full: 20,\r\n                special: null,\r\n                position: \"MD1\",\r\n                player_img_id: '008'\r\n            },\r\n            {\r\n                defense_current: 0,\r\n                defense_color: \"2F7F07\",\r\n                defense_full: 20,\r\n                attack_current: 0,\r\n                attack_color: \"E2D841\",\r\n                attack_full: 20,\r\n                special: null,\r\n                position: \"MD2\",\r\n                player_img_id: '018'\r\n            },\r\n            {\r\n                defense_current: 0,\r\n                defense_color: \"E2D841\",\r\n                defense_full: 20,\r\n                attack_current: 0,\r\n                attack_color: \"FF9702\",\r\n                attack_full: 20,\r\n                special: null,\r\n                position: \"F\",\r\n                player_img_id: '010'\r\n            }\r\n        ];\r\n\r\n        this.testClub2 = [\r\n            {\r\n                defense_current: 0,\r\n                defense_color: \"FF1D00\",\r\n                defense_full: 20,\r\n                attack_current: 0,\r\n                attack_color: \"B200FF\",\r\n                attack_full: 20,\r\n                special: null,\r\n                position: \"GK\",\r\n                opponent_img_id: '009'\r\n            },\r\n            {\r\n                defense_current: 0,\r\n                defense_color: \"B200FF\",\r\n                defense_full: 20,\r\n                attack_current: 0,\r\n                attack_color: \"2F7F07\",\r\n                attack_full: 20,\r\n                special: null,\r\n                position: \"DF1\",\r\n                opponent_img_id: '003'\r\n            },\r\n            {\r\n                defense_current: 0,\r\n                defense_color: \"B200FF\",\r\n                defense_full: 20,\r\n                attack_current: 0,\r\n                attack_color: \"FF1D00\",\r\n                attack_full: 20,\r\n                special: null,\r\n                position: \"DF2\",\r\n                opponent_img_id: '004'\r\n            },\r\n            {\r\n                defense_current: 0,\r\n                defense_color: \"E2D841\",\r\n                defense_full: 20,\r\n                attack_current: 0,\r\n                attack_color: \"FF9702\",\r\n                attack_full: 20,\r\n                special: null,\r\n                position: \"MD1\",\r\n                opponent_img_id: '005'\r\n            },\r\n            {\r\n                defense_current: 0,\r\n                defense_color: \"3052FF\",\r\n                defense_full: 20,\r\n                attack_current: 0,\r\n                attack_color: \"E2D841\",\r\n                attack_full: 20,\r\n                special: null,\r\n                position: \"MD2\",\r\n                opponent_img_id: '006'\r\n            },\r\n            {\r\n                defense_current: 0,\r\n                defense_color: \"E2D841\",\r\n                defense_full: 20,\r\n                attack_current: 0,\r\n                attack_color: \"B200FF\",\r\n                attack_full: 20,\r\n                special: null,\r\n                position: \"F\",\r\n                opponent_img_id: '007'\r\n            }\r\n        ]\r\n\r\n        this.clubData(clubName1);\r\n        // this.clubData(clubName2, true);\r\n\r\n    }\r\n    clubData = (clubName, secondTeam) => {\r\n        if (config.addTeam) {//for tests only for now...add club to DB\r\n            $.ajax({\r\n                url: \"addClub\",\r\n                type: 'POST',\r\n                contentType: 'application/json',\r\n                data: JSON.stringify({ name: clubName, players: this[clubName] }),\r\n                success: (res) => {\r\n                    console.log(res);\r\n                }\r\n            });\r\n        } else {\r\n            $.ajax({\r\n                url: \"getClubsPlayers\",\r\n                type: 'POST',\r\n                contentType: 'application/json',\r\n                data: JSON.stringify({ name: clubName }),\r\n                success: (res) => {\r\n                    if (!secondTeam) {\r\n                        this.player = res.clubData.players;\r\n                        this.clubData(this.clubName2, true);\r\n                    } else {\r\n                        this.opponent = res.clubData.players;\r\n                        this.onPlayerCardsData();\r\n                    }\r\n                }, error: () => {\r\n                    alert(\"err\")\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","import Card from \"./Card.js\";\r\nimport LineUps from \"../LineUps.js\";\r\n\r\nexport default class LevelCardsSet extends PIXI.Container {\r\n\r\n    constructor(dataRecieved, width, height, targetDeck) {\r\n        super();\r\n        this.targetDeck = targetDeck;\r\n        this.stageWidth = width;\r\n        this.stageHeight = height;\r\n        this.dataRecieved = dataRecieved;\r\n        this.lineUps = new LineUps(\"testClub1\", \"testClub2\", this.onPlayerCardsData);\r\n        this.interactive = false;\r\n    }\r\n\r\n    createPlayerDeck() {\r\n        for (let i = 0; i < 6; i++) {\r\n            let card = new Card({\r\n                index: i,\r\n                stats: this.lineUps.player[i],\r\n                font_size: this.stageHeight / 45 + 'px',  //change this shit!!\r\n\r\n                cardTexture: `images/players/player_id_${this.lineUps.player[i].player_img_id}.png`,\r\n                card_x: (this.stageWidth / 6) * i,\r\n                card_y: this.stageHeight * 0.88,\r\n                card_width: this.stageWidth / 6,\r\n                card_height: this.stageHeight * 0.12,\r\n\r\n                shoeTexture: `images/shoe.png`,\r\n                shoe_x: (this.stageWidth / 5.95) * i,\r\n                shoe_y: this.stageHeight * 0.882,\r\n                shoe_width: this.stageWidth / 21,\r\n                shoe_height: this.stageWidth / 21,\r\n\r\n                attack_text: {\r\n                    x: (this.stageWidth / 6) * i + this.stageWidth / 6,\r\n                    y: this.stageHeight * 0.88\r\n                },\r\n\r\n                gloveTexture: `images/glove2.png`,\r\n                glove_x: (this.stageWidth / 5.95) * i,\r\n                glove_y: this.stageHeight * 0.968,\r\n                glove_width: this.stageWidth / 21,\r\n                glove_height: this.stageWidth / 21,\r\n\r\n                defense_text: {\r\n                    x: (this.stageWidth / 6) * i + this.stageWidth / 6,\r\n                    y: this.stageHeight * 0.97\r\n                },\r\n\r\n                border_x: (this.stageWidth / 6) * i,\r\n                border_y: this.stageHeight * 0.879,\r\n                border_width: this.stageWidth / 6,\r\n                border_height: this.stageHeight * 0.12\r\n            })\r\n            this.addChild(card);\r\n        }\r\n    }\r\n\r\n    createOpponentDeck() {\r\n        for (let i = 0; i < 6; i++) {\r\n\r\n            let card = new Card({\r\n                index: i,\r\n                stats: this.lineUps.opponent[i],\r\n                font_size: this.stageHeight / 45 + 'px',  //idiotic!!!! TODO...\r\n\r\n                cardTexture: `images/players/player_id_${this.lineUps.opponent[i].opponent_img_id}.png`,\r\n                card_x: (this.stageWidth / 6) * i,\r\n                card_y: 0,\r\n                card_width: this.stageWidth / 6,\r\n                card_height: this.stageHeight * 0.12,\r\n\r\n                shoeTexture: `images/shoe.png`,\r\n                shoe_x: (this.stageWidth / 5.95) * i,\r\n                shoe_y: this.stageHeight * 0.005,\r\n                shoe_width: this.stageWidth / 21,\r\n                shoe_height: this.stageWidth / 21,\r\n\r\n                attack_text: {\r\n                    x: (this.stageWidth / 6) * i + this.stageWidth / 6,\r\n                    y: this.stageHeight * 0.002\r\n                },\r\n\r\n                gloveTexture: `images/glove2.png`,\r\n                glove_x: (this.stageWidth / 5.95) * i,\r\n                glove_y: this.stageHeight * 0.09,\r\n                glove_width: this.stageWidth / 21,\r\n                glove_height: this.stageWidth / 21,\r\n\r\n                defense_text: {\r\n                    x: (this.stageWidth / 6) * i + this.stageWidth / 6,\r\n                    y: this.stageHeight * 0.092\r\n                },\r\n\r\n                border_x: (this.stageWidth / 6) * i,\r\n                border_y: this.stageHeight * 0,\r\n                border_width: this.stageWidth / 6,\r\n                border_height: this.stageHeight * 0.122\r\n            })\r\n            this.addChild(card);\r\n        }\r\n    }\r\n\r\n    onPlayerCardsData = () => {\r\n        if (!this.lineUps.player || !this.lineUps.opponent) {\r\n            return;\r\n        }\r\n\r\n        this.targetDeck === \"player\" ? this.createPlayerDeck() : this.createOpponentDeck();\r\n\r\n        this.dataRecieved();\r\n    }\r\n}\r\n","import Config from \"../Config.js\";\r\nimport Grid from \"./Grid.js\";\r\n\r\nexport default class Block extends PIXI.Container {\r\n    constructor(row, col, rowContainer, grid, app) {\r\n        super();\r\n        this.config = Config;\r\n        this.app = app;\r\n        this.grid = grid;\r\n        this.row = row;\r\n        this.col = col;\r\n        this.rowContainer = rowContainer;\r\n        this.moveCoordinates = { startX: 0, startY: 0, lastX: 0, lastY: 0 }\r\n        this.create();\r\n    }\r\n\r\n    create() {\r\n        let figureMissing = true;\r\n        // check if grid is predefined(debug purposes)\r\n        if (!this.config.isGridInDebug) {\r\n            while (figureMissing) {\r\n                this.img = this.generateRandomColorBlock();\r\n                figureMissing = this.createNonMatchingGrid(this.row, this.col, this.img);\r\n            }\r\n        } else {\r\n            this.img = this.config.debugGrid[this.row][this.col];\r\n        }\r\n\r\n        let blockTexture = PIXI.Texture.fromImage(`images/${this.img}.png`);\r\n        this.blockImg = new PIXI.Sprite(blockTexture);\r\n        this.interactive = true;\r\n        this.buttonMode = true;\r\n        this.blockImg.anchor.x = 0.5; //??????????????????\r\n        this.blockImg.anchor.y = 0.5; //??????????????????\r\n        this.blockImg.gridPosition_x = this.row;\r\n        this.blockImg.gridPosition_y = this.col;\r\n        this.type = this.img;\r\n\r\n        let grid_h = this.app.height * 0.65;\r\n        let grid_w = grid_h * 0.75;\r\n        let block_w = grid_w / 6\r\n        let block_h = grid_h / 8;\r\n        let grid_y = block_h / 2 + (this.app.height - grid_h) / 2;\r\n        let grid_x = block_h / 2 + ((this.app.width - grid_w) / 2);\r\n\r\n        this.blockImg.x = grid_x + block_w * this.col;\r\n        this.blockImg.y = grid_y + block_h * this.row;\r\n        this.blockImg.width = block_h * 0.9;\r\n        this.blockImg.height = block_h * 0.9;\r\n\r\n        this.grid.globalBlocksPositions[this.row].push({\r\n            x: this.blockImg.x,\r\n            y: this.blockImg.y\r\n        })\r\n\r\n        this.blockImg.alpha = 0;;\r\n        this.addChild(this.blockImg);    ///This not row container!!!!!\r\n\r\n        setTimeout(() => {\r\n            this.blockImg.alpha = 1;\r\n        }, this.row * 90 + this.col * 15 + this.config.fadeTimeBetweenPhases * 1000 + 1750);\r\n\r\n        this.on('pointerdown', this.onDragStart);\r\n        this.on('pointerup', this.onDragEnd)\r\n        //  TODO        block.on('pointerupoutside', onDragEnd)\r\n        this.on('pointermove', this.onDragMove)\r\n\r\n\r\n    }\r\n\r\n    generateRandomColorBlock() {\r\n        let x = Math.floor(Math.random() * 100) + 1;\r\n        let a;\r\n        switch (true) {\r\n            case x <= 14:\r\n                a = \"ball_blue\";\r\n                break;\r\n            case (x > 14 && x <= 28):\r\n                a = \"ball_green\";\r\n                break;\r\n            case x > 28 && x <= 42:\r\n                a = \"ball_orange\";\r\n                break;\r\n            case x > 42 && x <= 56:\r\n                a = \"ball_purple\";\r\n                break;\r\n            case x > 56 && x <= 70:\r\n                a = \"ball_red\";\r\n                break;\r\n            case x > 70 && x <= 84:\r\n                a = \"ball_yellow\";\r\n                break;\r\n            case x > 84 && x <= 94:\r\n                a = \"yellow_card\";\r\n                break;\r\n            case x > 94 && x <= 98:\r\n                a = \"red_card\";\r\n                break;\r\n            case x > 98 && x <= 100:\r\n                a = \"red_cross\";\r\n                break;\r\n            default:\r\n                a = \"error\";\r\n                break;\r\n        }\r\n        return a;\r\n    }\r\n\r\n    createNonMatchingGrid(_row, _col, img) {\r\n        let checkLeft = () => {\r\n            if (_col < 2) {\r\n                return false;\r\n            }\r\n            let matches = 1;\r\n            for (let col = 1; col < 3; col++) {\r\n                if (img === this.rowContainer.children[_col - col].type) {\r\n                    matches++;\r\n                    if (matches === 3) {\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n        };\r\n\r\n        let checkUp = () => {\r\n            if (_row < 2) {\r\n                return false;\r\n            }\r\n            let matches = 1;\r\n            for (let row = 1; row < 3; row++) {\r\n                if (img === this.grid.children[_row - row].children[_col].type) {\r\n                    matches++;\r\n                    if (matches === 3) {\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n        };\r\n        return checkUp() || checkLeft();\r\n    }\r\n\r\n    onDragStart = (e) => {\r\n        e.gridPosition_x = this.col;\r\n        e.gridPosition_y = this.row;\r\n        this.grid.onDragStart(e);\r\n    }\r\n\r\n    onDragMove = (e) => {\r\n        this.grid.onDragMove(e);\r\n    }\r\n\r\n    onDragEnd = (e) => {\r\n        this.grid.onDragEnd(e);\r\n    }\r\n}","import Config from \"../Config.js\";\r\nimport Block from \"./Block.js\";\r\n\r\nexport default class Row extends PIXI.Container {\r\n    constructor(app, row, grid) {\r\n        super();\r\n        this.config = Config;\r\n        this.app = app;\r\n        this.rowId = row;\r\n        this.grid = grid;\r\n        this.create();\r\n    }\r\n\r\n    create() {\r\n        for (let col = 0; col < 6; col++) {\r\n            let block = new Block(this.rowId, col, this, this.grid, this.app);\r\n            this.addChild(block);\r\n            this.grid.blocks[this.rowId].push(block);\r\n        }\r\n    }\r\n}\r\n","\r\nimport Config from \"../Config.js\";\r\nimport Block from \"./Block.js\";\r\nimport Row from \"./Row.js\";\r\n\r\nexport default class Grid extends PIXI.Container {\r\n    constructor(app) {\r\n        super();\r\n        this.app = app;\r\n        this.level = app.level;\r\n        this.config = Config;\r\n        this.moveCoordinates = { startX: 0, startY: 0, lastX: 0, lastY: 0 }\r\n        this.interactive = true;\r\n        this.gridArrays = [];\r\n        this.globalBlocksPositions = [[], [], [], [], [], [], [], []];\r\n        this.blocks = [[], [], [], [], [], [], [], []];\r\n\r\n        this.createGrid();\r\n    }\r\n\r\n    createGrid() {\r\n        for (let row = 0; row < 8; row++) {\r\n            let rowContainer = new Row(this.app, row, this);\r\n            this.addChild(rowContainer);\r\n            this.gridArrays.push(rowContainer.children.map(c => c.type));\r\n        }\r\n    }\r\n\r\n    swapBlocks(block1_x, block1_y, dir) {\r\n        this.dragging = false;\r\n        this.swapDirection = dir;\r\n        this.blockBeingSwappedWith = null;\r\n        let item1 = this.children[block1_y].children[block1_x];\r\n        let itemOneOldImg = item1.img;\r\n        let itemTwoOldImg = null;;\r\n        this.selectedBlock = { row: block1_y, col: block1_x, type: item1.type, oldX: item1.blockImg.x, oldY: item1.blockImg.y };\r\n        let item2;\r\n        switch (dir) {\r\n            case \"down\":\r\n                item2 = this.children[block1_y + 1].children[block1_x];\r\n                this.blockBeingSwappedWith = { row: block1_y + 1, col: block1_x, type: item2.type, oldX: item2.blockImg.x, oldY: item2.blockImg.y };\r\n                break;\r\n            case \"up\":\r\n                item2 = this.children[block1_y - 1].children[block1_x];\r\n                this.blockBeingSwappedWith = { row: block1_y - 1, col: block1_x, type: item2.type, oldX: item2.blockImg.x, oldY: item2.blockImg.y };\r\n                break;\r\n            case \"left\":\r\n                item2 = this.children[block1_y].children[block1_x - 1];\r\n                this.blockBeingSwappedWith = { row: block1_y, col: block1_x - 1, type: item2.type, oldX: item2.blockImg.x, oldY: item2.blockImg.y };\r\n                break;\r\n            case \"right\":\r\n                item2 = this.children[block1_y].children[block1_x + 1];\r\n                this.blockBeingSwappedWith = { row: block1_y, col: block1_x + 1, type: item2.type, oldX: item2.blockImg.x, oldY: item2.blockImg.y };\r\n            default:\r\n                break;\r\n        }\r\n\r\n        itemTwoOldImg = item2.img;\r\n\r\n        TweenMax.to(item1.children[0], 0.2, {\r\n            y: item2.children[0].y,\r\n            x: item2.children[0].x,\r\n            ease: Linear.easeNone,\r\n            onComplete: () => {\r\n\r\n            }\r\n        });\r\n        //        TweenMax.to(item1.scale, 0.2, {x: 1.01, y: 1.01, repeat: 1, yoyo: true});    //works\r\n\r\n        TweenMax.to(item2.children[0], 0.2, {\r\n            y: item1.children[0].y,\r\n            x: item1.children[0].x,\r\n            ease: Linear.easeNone,\r\n            onComplete: () => {\r\n                let type1 = item1.type;\r\n                let gridPosition1 = item1.gridPosition;\r\n                item1.type = item2.type;\r\n                item1.gridPosition = item2.gridPosition;\r\n                item2.type = type1;\r\n                item2.gridPosition = gridPosition1;\r\n                //              START OF PROTON EFFECT AFTER MATCH\r\n                let matches = this.checkGridForMatches();\r\n\r\n                if (matches.length !== 0) {\r\n                    for (let m = 0; m < matches.length; m++) {\r\n                        if (matches[m].row === item2.row && matches[m].col === item2.col) {\r\n                            matches[m].beingSwapped = true;\r\n                            this.matchingSwappedItem = 1;\r\n                        } else if (((matches[m].row === item1.row) && (matches[m].col === item1.col))) {\r\n                            matches[m].beingSwapped = true;\r\n                            this.matchingSwappedItem = 2;\r\n                        }\r\n                        else {\r\n                            matches[m].dir = this.swapDirection;\r\n                        }\r\n                    }\r\n\r\n                    this.gridArrays[this.selectedBlock.row][this.selectedBlock.col] = itemTwoOldImg;\r\n                    this.gridArrays[this.blockBeingSwappedWith.row][this.blockBeingSwappedWith.col] = itemOneOldImg;\r\n\r\n                    let item_2_Old_X = this.globalBlocksPositions[this.selectedBlock.row][this.selectedBlock.col].x;\r\n                    let item_2_Old_Y = this.globalBlocksPositions[this.selectedBlock.row][this.selectedBlock.col].y;\r\n                    let item_2_OldType = this.children[this.selectedBlock.row].children[this.selectedBlock.col].type;\r\n\r\n                    item2.children[0].x = this.globalBlocksPositions[this.blockBeingSwappedWith.row][this.blockBeingSwappedWith.col].x;\r\n                    item2.children[0].y = this.globalBlocksPositions[this.blockBeingSwappedWith.row][this.blockBeingSwappedWith.col].y;\r\n                    item2.type = this.children[this.blockBeingSwappedWith.row].children[this.blockBeingSwappedWith.col].type;\r\n                    item2.children[0].texture = PIXI.Texture.fromImage(`images/${item2.type}.png`);\r\n\r\n                    item1.children[0].x = item_2_Old_X;\r\n                    item1.children[0].y = item_2_Old_Y;\r\n                    item1.type = item_2_OldType;\r\n                    item1.children[0].texture = PIXI.Texture.fromImage(`images/${item1.type}.png`);\r\n\r\n                    this.gatherMatchingBlocks(matches);\r\n                    TweenMax.delayedCall(0, () => {\r\n                        this.increaseCardsPointsAfterMatch(matches);\r\n                    })\r\n                }\r\n                else {\r\n                    TweenMax.to(item1.children[0], 0.2, {\r\n                        y: this.selectedBlock.oldY,\r\n                        x: this.selectedBlock.oldX,\r\n                        ease: Linear.easeNone,\r\n                        onComplete: () => {\r\n                            this.animationInProgress = false;\r\n                        }\r\n                    });\r\n                    TweenMax.to(item2.children[0], 0.2, {\r\n                        y: this.blockBeingSwappedWith.oldY,\r\n                        x: this.blockBeingSwappedWith.oldX,\r\n                        ease: Linear.easeNone,\r\n                        onComplete: () => {\r\n                            this.animationInProgress = false;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    checkGridForMatches() {\r\n        let matches = [];\r\n        for (let row = 0; row < 8; row++) {\r\n            for (let col = 0; col < 6; col++) {\r\n                let match = {\r\n                    row: row,\r\n                    col: col,\r\n                    type: this.children[row].children[col].type\r\n                };\r\n\r\n                //              check right\r\n                let thisBlock = this.children[row].children[col].type;\r\n                let nextBlock_right1 = this.children[row].children[col + 1] ? this.children[row].children[col + 1].type : null;\r\n                let nextBlock_right2 = this.children[row].children[col + 2] ? this.children[row].children[col + 2].type : null;\r\n                let prevBlock_left1 = this.children[row].children[col - 1] ? this.children[row].children[col - 1].type : null;\r\n                let prevBlock_left2 = this.children[row].children[col - 2] ? this.children[row].children[col - 2].type : null;\r\n\r\n                if ((thisBlock === nextBlock_right1 && thisBlock === nextBlock_right2) ||\r\n                    (thisBlock === prevBlock_left1 && thisBlock === prevBlock_left2) ||\r\n                    (thisBlock === nextBlock_right1 && thisBlock === prevBlock_left1)\r\n                ) {\r\n                    matches.push(match);\r\n                    continue; // already match, no need to check downwards    ?????????????????????\r\n                }\r\n\r\n                //              check down\r\n                let nextBlock_down1 = null;\r\n                if (this.children[row + 1]) {\r\n                    nextBlock_down1 = this.children[row + 1].children[col] ? this.children[row + 1].children[col].type : null;\r\n                }\r\n\r\n                let nextBlock_down2 = null;\r\n                if (this.children[row + 2]) {\r\n                    nextBlock_down2 = this.children[row + 2].children[col] ? this.children[row + 2].children[col].type : null;\r\n                }\r\n\r\n                let prevBlock_Up1 = null;\r\n                if (this.children[row - 1]) {\r\n                    prevBlock_Up1 = this.children[row - 1].children[col] ? this.children[row - 1].children[col].type : null;\r\n                }\r\n                let prevBlock_Up2 = null;\r\n                if (this.children[row - 2]) {\r\n                    prevBlock_Up2 = this.children[row - 2].children[col] ? this.children[row - 2].children[col].type : null;\r\n                }\r\n\r\n                if ((thisBlock === prevBlock_Up1 && thisBlock === prevBlock_Up2) ||\r\n                    (thisBlock === nextBlock_down1 && thisBlock === nextBlock_down2) ||\r\n                    (thisBlock === nextBlock_down1 && thisBlock === prevBlock_Up1)\r\n                ) {\r\n                    matches.push(match);\r\n                }\r\n                // match.matchIndex = matchIndex;\r\n            }\r\n        }\r\n        return matches;\r\n    }\r\n\r\n    //animate matching blocks to currently moved block position\r\n    gatherMatchingBlocks(matches) {\r\n        this.nullifyMatchesInGridArray(matches);\r\n\r\n        let beingSwapped = matches.filter(e => e.beingSwapped);\r\n\r\n\r\n        if (beingSwapped.length === 0) {\r\n            /* in this case this is automatch and we need to set target\r\n                blocks for each match so that the rest of certain color can \r\n                go to target block position\r\n            */\r\n\r\n            // array of all matches types... for example [\"ball_red\", \"ball_green\"] etc.\r\n            const arrTypes = [...new Set(matches.map(m => m.type))];\r\n\r\n            for (let type of arrTypes) {\r\n                let typeItems = matches.filter(m => m.type === type);\r\n                let centralItem = Math.floor(typeItems.length / 2);\r\n                console.log(centralItem)\r\n                matches[centralItem].beingSwapped = true;   //?? might cause problems!!!!\r\n                beingSwapped.push(matches[centralItem]);\r\n            }\r\n        }\r\n\r\n        for (let m = 0; m < beingSwapped.length; m++) {\r\n\r\n            let thisColorMatches = matches.filter(e => e.type === beingSwapped[m].type);\r\n\r\n            for (let e = 0; e < thisColorMatches.length; e++) {\r\n                let targetBlock = thisColorMatches.filter(x => x.beingSwapped)[0];\r\n                let tweenTarget = this.children[thisColorMatches[e].row].children[thisColorMatches[e].col];\r\n\r\n                if (!thisColorMatches[e].beingSwapped) {\r\n                    let newX = this.globalBlocksPositions[targetBlock.row][targetBlock.col].x;\r\n                    let newY = this.globalBlocksPositions[targetBlock.row][targetBlock.col].y;\r\n                    TweenMax.to(tweenTarget.blockImg, .2, {\r\n                        x: newX,\r\n                        y: newY,\r\n                        alpha: 0,\r\n                        ease: Linear.easeNone,\r\n                        onComplete: () => {\r\n                            // TweenMax.killAll();\r\n                            // this.increaseCardsPointsAfterMatch(matches);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    TweenMax.to(tweenTarget.blockImg, .2, {\r\n                        alpha: 0,\r\n                        delay: .2,\r\n                        onComplete: () => {\r\n                            // TweenMax.killAll();\r\n                            // this.increaseCardsPointsAfterMatch(matches);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    nullifyMatchesInGridArray(matches) {\r\n        for (const item of matches) {\r\n            this.gridArrays[item.row][item.col] = null;\r\n        }\r\n    }\r\n\r\n    increaseCardsPointsAfterMatch(matches) {\r\n        if (this.parent.playerTurn) {\r\n            for (let cardIdx = 0; cardIdx < this.parent.playerCards.children.length; cardIdx++) {\r\n                let card = this.parent.playerCards.children[cardIdx];\r\n                setTimeout(() => {\r\n                    card.increasePoints(matches);\r\n                }, 75 * cardIdx);\r\n            }\r\n            TweenMax.delayedCall(0.75, () => {\r\n                this.tweenDownMatchingBlocks(matches);\r\n            })\r\n        }\r\n        else {\r\n            // TODO... same for opponent\r\n        }\r\n    }\r\n\r\n    // check for automatic matches on the grid after manual match\r\n    checkAutomaticMatch() {\r\n        TweenMax.delayedCall(0.5, () => {\r\n            let matches = this.checkGridForMatches();\r\n            console.log(matches);\r\n            if (matches.length > 0) {\r\n                this.gatherMatchingBlocks(matches);\r\n                TweenMax.delayedCall(0, () => {\r\n                    this.increaseCardsPointsAfterMatch(matches);\r\n                })\r\n            } else {\r\n                // TweenMax.delayedCall(1, () => {\r\n                this.animationInProgress = false;\r\n                // })\r\n            }\r\n        })\r\n    }\r\n\r\n    tweenDownMatchingBlocks(matches) {\r\n\r\n        // make remaining blocks fall first!\r\n        this.holesInColumns = [\r\n            { holes: 0, onRow: [] },\r\n            { holes: 0, onRow: [] },\r\n            { holes: 0, onRow: [] },\r\n            { holes: 0, onRow: [] },\r\n            { holes: 0, onRow: [] },\r\n            { holes: 0, onRow: [] }\r\n        ];\r\n\r\n        /*\r\n            loop thru grid array to find number\r\n            of holes and their row positions\r\n        */\r\n        this.gridArrays.forEach((row, rowIndex) => {\r\n            row.forEach((col, colIndex) => {\r\n                if (this.gridArrays[rowIndex][colIndex] === null) {\r\n                    this.holesInColumns[colIndex].holes++;\r\n                    this.holesInColumns[colIndex].onRow.push(rowIndex);\r\n                }\r\n            });\r\n        });\r\n\r\n        /*\r\n            loop thru blocks to determine\r\n            how many rows each block should fall\r\n        */\r\n        this.blocks.forEach((row, rowIndex) => {\r\n\r\n            row.forEach((el, colIndex) => {\r\n                this.blocks[rowIndex][colIndex].shouldFall = 0;\r\n                if (this.gridArrays[rowIndex][colIndex] !== null) {\r\n                    this.blocks[rowIndex][colIndex].shouldFall = this.holesInColumns[colIndex].onRow.filter(h => h >= el.row).length;\r\n                }\r\n                let shouldFall = this.blocks[rowIndex][colIndex].shouldFall;\r\n                if (shouldFall > 0) {\r\n\r\n                    // this is temp lame solution for single vertical match bug... TODO... fix it!!!\r\n                    //this will definitely brak when matching automaticaly\r\n                    //another solution required here!!!!!!!!!!!!!!!!!!!!!!!!\r\n                    // let singlevVerticalMatch = matches.filter(m => m.beingSwapped).length === 1 &&\r\n                    //     (this.swapDirection === \"down\" || this.swapDirection === \"up\" &&\r\n                    //         (matches.filter(m => m.beingSwapped)[0].row === rowIndex &&\r\n                    //             matches.filter(m => m.beingSwapped)[0].col === colIndex)\r\n                    //     ) ? -1 : 0;\r\n\r\n\r\n                    let newY = this.globalBlocksPositions[rowIndex + shouldFall][colIndex].y;\r\n                    let tweenTarget = this.blocks[rowIndex][colIndex].blockImg;\r\n\r\n                    // this.gridArrays[rowIndex + shouldFall][colIndex] = tweenTarget.parent.img;\r\n                    TweenMax.to(tweenTarget, .3 * shouldFall, {\r\n                        y: newY,\r\n                        // delay: fallDelay,\r\n                        onComplete: () => {\r\n                            // TweenMax.killAll();\r\n                            this.gridArrays[rowIndex + shouldFall][colIndex] = tweenTarget.parent.type;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        this.createNewBlocks();\r\n    }\r\n\r\n    createNewBlocks() {\r\n        let blockHeight = this.globalBlocksPositions[1][0].y - this.globalBlocksPositions[0][0].y;\r\n        let gridY = this.globalBlocksPositions[0][0].y;\r\n        this.holesInColumns.forEach((el, colIndex) => {\r\n            if (el.holes > 0) {\r\n                for (let hole = 0; hole < el.holes; hole++) {\r\n                    let row = el.onRow[hole];\r\n                    let block = this.blocks[row][colIndex].blockImg;\r\n\r\n                    let img = block.parent.generateRandomColorBlock();\r\n                    // let img = \"ball_green\";    //for test only\r\n\r\n                    block.texture = PIXI.Texture.fromImage(`images/${img}.png`);\r\n                    let startY = this.globalBlocksPositions[el.holes - hole - 1][colIndex].y;\r\n                    block.y = gridY - (blockHeight * (hole + 1));\r\n                    block.x = this.globalBlocksPositions[row][colIndex].x;\r\n                    block.alpha = 1;\r\n                    TweenMax.to(block, .31 * el.holes, {\r\n                        y: startY,\r\n                        onComplete: () => {\r\n                            // TweenMax.killAll();\r\n                            this.gridArrays[el.holes - hole - 1][colIndex] = block.parent.img = img;\r\n                            // console.table(this.gridArrays);\r\n                            // console.log(this.blocks);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        TweenMax.delayedCall(Math.max(...this.holesInColumns.map(h => h.holes)) * .33, () => {\r\n            this.setAccurateBlocksPositions();\r\n        })\r\n        // this.checkAutomaticMatch();\r\n    }\r\n\r\n    setAccurateBlocksPositions() {\r\n        this.gridArrays.forEach((row, rowIndex) => {\r\n            row.forEach((el, colIndex) => {\r\n                let img = this.gridArrays[rowIndex][colIndex];\r\n                let type = img;\r\n                let texture = PIXI.Texture.fromImage(`images/${img}.png`);\r\n                let x = this.globalBlocksPositions[rowIndex][colIndex].x;\r\n                let y = this.globalBlocksPositions[rowIndex][colIndex].y;\r\n\r\n                this.blocks[rowIndex][colIndex].img = img;\r\n                this.blocks[rowIndex][colIndex].type = type;\r\n                this.blocks[rowIndex][colIndex].blockImg.texture = texture;\r\n                this.blocks[rowIndex][colIndex].blockImg.x = x;\r\n                this.blocks[rowIndex][colIndex].blockImg.y = y;\r\n            })\r\n        })\r\n\r\n        console.table(this.gridArrays);\r\n        console.log(this.blocks);\r\n\r\n        this.checkAutomaticMatch();\r\n    }\r\n\r\n    onDragStart = (e) => {\r\n        this.moveCoordinates.startX = e.data.global.x;\r\n        this.moveCoordinates.startY = e.data.global.y;\r\n        this.moveCoordinates.lastX = e.data.global.x;\r\n        this.moveCoordinates.lastY = e.data.global.y;\r\n\r\n        this.gridPosition_x = e.gridPosition_x;\r\n        this.gridPosition_y = e.gridPosition_y;\r\n        this.data = e.data;\r\n        this.dragging = true;\r\n    }\r\n\r\n    onDragMove = (e) => {\r\n        if (this.dragging && !this.animationInProgress) {\r\n            /*   \r\n             gets block height and divides it by 3,\r\n             the least drag/swipe distance\r\n             to start blocks swap.\r\n             ...needs better solution here!!!\r\n             */\r\n\r\n            this.moveCoordinates.lastX = e.data.global.x;\r\n            this.moveCoordinates.lastY = e.data.global.y;\r\n\r\n            let dist = this.blocks[0][0].height / 3;\r\n\r\n            let directions = {\r\n                left: this.moveCoordinates.startX - this.moveCoordinates.lastX,\r\n                right: this.moveCoordinates.lastX - this.moveCoordinates.startX,\r\n                up: this.moveCoordinates.startY - this.moveCoordinates.lastY,\r\n                down: this.moveCoordinates.lastY - this.moveCoordinates.startY\r\n            };\r\n\r\n            let arr = Object.values(directions);\r\n            let max = Math.max(...arr);\r\n\r\n            let dir = Object.keys(directions).find(key => directions[key] === max);\r\n            if (\r\n                (this.moveCoordinates.startY === this.moveCoordinates.lastY && this.moveCoordinates.startX === this.moveCoordinates.lastX) ||\r\n                (dir === \"down\" && this.gridPosition_y === 7) ||\r\n                (dir === \"up\" && this.gridPosition_y === 0) ||\r\n                (dir === \"right\" && this.gridPosition_x === 5) ||\r\n                (dir === \"left\" && this.gridPosition_x === 0) ||\r\n                max < dist) {\r\n                return;\r\n            }\r\n\r\n            this.animationInProgress = true;\r\n            this.swapBlocks(this.gridPosition_x, this.gridPosition_y, dir);\r\n        }\r\n    }\r\n\r\n    onDragEnd(e) {\r\n        this.dragging = false;\r\n    }\r\n\r\n}\r\n","import Background from \"./Background.js\";\r\nimport Config from \"./Config.js\";\r\nimport LevelCardsSet from \"./gameLevel/LevelCardsSet.js\";\r\nimport Grid from \"./gameLevel/Grid.js\";\r\n\r\nexport default class Level extends PIXI.Container {\r\n\r\n    constructor(app) {\r\n\r\n        super();\r\n        alert(\"level\")\r\n        this.app = app;\r\n        this.config = Config;\r\n        this.stage = app.stage;\r\n        this.stage.alpha = 0;\r\n        this.proton = app.proton;\r\n        this.width = app.width; // / this.config.rendererResolution;\r\n        this.height = app.height;//  / this.config.rendererResolution;\r\n        this.grid = null;\r\n        this.playerCardsContainer = null;\r\n        this.opponentCardsContainer = null;\r\n        this.animationInProgress = false;\r\n        this.playerTurn = true; //should be rondom or host's\r\n\r\n        this.bg = new Background(this.app, {\r\n            gamePhase: \"level\",\r\n            bgTexture: 'images/pitch.png',\r\n            bg_x: -this.app.width * 0.005,\r\n            bg_y: -this.app.height * 0.005,\r\n            bg_width: this.app.width * 1.005,\r\n            bg_height: this.app.height * 1.005\r\n        });\r\n        this.addChild(this.bg);\r\n        this.grid = new Grid(this.app);\r\n        this.addChild(this.grid);\r\n        this.dataRecieved = () => {\r\n            this.grid.checkGridForMatches();\r\n            TweenMax.delayedCall(1, () => {\r\n                TweenMax.to(this.stage, this.config.fadeTimeBetweenPhases, { alpha: 1 });\r\n            })\r\n        }\r\n\r\n        this.playerCards = new LevelCardsSet(this.dataRecieved, this.app.width, this.app.height, \"player\");\r\n        this.addChild(this.playerCards);\r\n\r\n        this.opponentCards = new LevelCardsSet(() => { }, this.app.width, this.app.height, \"opponent\");\r\n        this.addChild(this.opponentCards);\r\n    }\r\n}\r\n","\"use strict\";\r\n\r\nexport default class Stage {\r\n\r\n    constructor() {\r\n\r\n        // Use the native window resolution as the default resolution\r\n        // will support high-density displays when rendering\r\n        PIXI.settings.RESOLUTION = window.devicePixelRatio;    //??????????????\r\n\r\n        // Disable interpolation when scaling, will make texture be pixelated\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n        // PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.LINEAR;\r\n\r\n        this.canvas = document.getElementById(\"stage\");\r\n        this.stage = new PIXI.Container();\r\n\r\n        let resolutiion = () => { //16:9\r\n\r\n            console.log(window.devicePixelRatio);\r\n            // КУРРРРРРРРРРРРРР\r\n\r\n\r\n            this.width = 1080;\r\n            this.height = 1920;\r\n\r\n            this.height = window.innerHeight;\r\n            this.width = 1080 * this.height / 1920;\r\n\r\n\r\n            if (this.width > window.innerWidth) {\r\n                this.width = window.innerWidth;\r\n                this.height = this.width * 1.77;\r\n            }\r\n\r\n\r\n\r\n            // if (this.width * 1.77 > window.innerHeight) {\r\n            //     this.height = window.innerHeight;\r\n            // } else {\r\n            //     this.height = Math.round(this.width * 1.77);\r\n            // }\r\n\r\n            // if (window.innerHeight < 650 * 1.77) {\r\n            //     this.height = window.innerHeight;\r\n            //     this.width = window.innerHeight * 0.562;\r\n            // }\r\n\r\n            this.canvas.width = this.width;\r\n            this.canvas.height = this.height;\r\n\r\n            this.stage.height = this.height;\r\n            this.stage.width = this.width;\r\n\r\n            console.log(this.width)\r\n            console.log(this.height)\r\n\r\n            this.renderer.resize(this.canvas.width, this.canvas.height);\r\n        }\r\n\r\n        this.renderer = PIXI.autoDetectRenderer(this.canvas.width, this.canvas.height, {\r\n            transparent: true,\r\n            resolution: window.devicePixelRatio || 1,//2, //7 :) //DPR\r\n            view: this.canvas,\r\n            autoResize: true,\r\n            autoDensity: true,\r\n            antialias: true\r\n        });\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.LINEAR;\r\n\r\n        resolutiion();\r\n        // alert(window.devicePixelRatio)\r\n        // document.documentElement.webkitRequestFullScreen();\r\n        this.animationLoop = () => {\r\n            this.renderer.render(this.stage);\r\n            requestAnimationFrame(this.animationLoop);\r\n        };\r\n\r\n        this.setup = () => {\r\n            this.animationLoop();\r\n        };\r\n\r\n        this.loader = PIXI.loader;\r\n        this.loader.add('spriteSheet', \"images/pitch.png\");\r\n        // this.loader.add('Girassol', 'fonts/Girassol-Regular.ttf');\r\n\r\n        this.loader.load(this.setup);\r\n        window.onresize = resolutiion;\r\n    }\r\n}\r\n","\"use strict\";\r\nexport default class LogIn {\r\n\r\n    constructor(app) {\r\n\r\n        this.stage = app.stage;\r\n        this.stage.alpha = 0;\r\n        this.app = app;\r\n        this.config = this.app.config;\r\n\r\n        //apply inputs style\r\n        this.wrapper = document.querySelector(\"#wrapper\");\r\n        this.wrapper.style.width = this.app.width * 0.8 + \"px\";\r\n        this.wrapper.style.height = this.app.height / 5 + \"px\";\r\n        this.wrapper.style.opacity = 0;\r\n        this.wrapper.style.pointerEvents = \"none\";\r\n\r\n        this.username = document.querySelector(\"#username\");\r\n        this.username.style.marginBottom = app.height * 0.05 + \"px\";\r\n        this.username.oninput = this.inputLength;\r\n        this.username.style.opacity = 0.6;\r\n        this.username.style.pointerEvents = \"none\";\r\n\r\n        this.password = document.querySelector(\"#password\");\r\n        this.password.oninput = this.inputLength;\r\n        this.password.style.opacity = 0.6;\r\n        this.password.style.pointerEvents = \"none\";\r\n\r\n        this.go = document.querySelector(\"#go\");\r\n        this.go.style.opacity = 0.6;\r\n        this.go.style.pointerEvents = \"none\";\r\n        this.go.addEventListener(\"click\", this.goPressed);\r\n\r\n        document.querySelector(\"#wrapper\").addEventListener(\"submit\", (() => {\r\n            this.goPressed();\r\n        }));\r\n\r\n        this.login = document.querySelector(\"#login\");\r\n        this.login.addEventListener(\"click\", this.loginPressed);\r\n\r\n        this.register = document.querySelector(\"#register\");\r\n        this.register.addEventListener(\"click\", this.registerPressed);\r\n\r\n        this.go.style.display = \"block\";\r\n        this.login.style.display = \"block\";\r\n        this.register.style.display = \"block\";\r\n        this.username.style.display = \"block\";\r\n        this.password.style.display = \"block\";\r\n\r\n        TweenMax.delayedCall(1.2, () => {\r\n            TweenMax.to(this.wrapper, 0.5, { opacity: 1 });\r\n            TweenMax.to(this.stage, 0.5, { alpha: 1 });\r\n        })\r\n\r\n    }\r\n\r\n    loginPressed = () => {\r\n        this.action = \"login\";\r\n        this.enableInputs();\r\n        TweenMax.to(this.register, 0.5, { opacity: 0.5 });\r\n        TweenMax.to(this.login, 0.5, { opacity: 1 });\r\n        TweenMax.to(this.username, 0.5, { opacity: 1 });\r\n        TweenMax.to(this.password, 0.5, { opacity: 1 });\r\n        this.username.style.pointerEvents = \"auto\";\r\n        this.password.style.pointerEvents = \"auto\";\r\n    };\r\n\r\n    goPressed = () => {\r\n        this.validate();\r\n    };\r\n\r\n    registerPressed = () => {\r\n        this.action = \"register\";\r\n        this.enableInputs();\r\n        TweenMax.to(this.register, 0.5, { opacity: 1 });\r\n        TweenMax.to(this.login, 0.5, { opacity: 0.5 });\r\n        TweenMax.to(this.username, 0.5, { opacity: 1 });\r\n        TweenMax.to(this.password, 0.5, { opacity: 1 });\r\n        this.username.style.pointerEvents = \"auto\";\r\n        this.password.style.pointerEvents = \"auto\";\r\n    };\r\n\r\n    enableInputs = () => {\r\n        TweenMax.to(this.wrapper, 0.5, { opacity: 1 });\r\n        if (!this.picked) {\r\n            TweenMax.to(this.go, 1, { alpha: 0.6 });\r\n        }\r\n        this.picked = true;\r\n    }\r\n\r\n    validate() {\r\n        $.ajax({\r\n            url: this.action, //login or register\r\n            type: 'POST',\r\n            //            mode: 'cors',\r\n            contentType: 'application/json',\r\n            //            Accept: 'application/json',\r\n            //            Origin: \"http://localhost:3000\",\r\n            //            \"Access-Control-Allow-Origin\": \"*\",\r\n            data: JSON.stringify({ user: this.username.value, pass: this.password.value }),\r\n            success: (res) => {\r\n                if (res.nameInUse) {\r\n                    this.clearUserInput();\r\n                    window.alert(\"name in use!\"); //TODO... \r\n                    return;\r\n                }\r\n                if (res.authorized) {\r\n                    localStorage.setItem(\"match3football\", res.storageItem);\r\n                    TweenMax.to(this.wrapper, this.config.fadeTimeBetweenPhases, { opacity: 0 });\r\n                    TweenMax.to(this.stage, this.config.fadeTimeBetweenPhases, {\r\n                        alpha: 0, onComplete: () => {\r\n                            this.stage.removeChildren();\r\n                            this.app.startLevel();\r\n                            TweenMax.killAll();\r\n                            this.wrapper.remove();\r\n                            this.wrapper.style.display = \"none\"\r\n                        }\r\n                    });\r\n                } else if (!res.authorized) {\r\n                    this.clearUserInput();\r\n                    window.alert(\"invalid username or password!\"); //TODO...\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    clearUserInput() {\r\n        this.username.value = \"\";\r\n        this.password.value = \"\";\r\n        this.inputLength();\r\n    }\r\n\r\n    //on input change. if any is empty, disable GO btn\r\n    inputLength = () => {\r\n        if (this.username.value === \"\" || this.password.value === \"\") {\r\n            this.go.style.pointerEvents = \"auto\"\r\n            TweenMax.to(this.go, 0.15, { alpha: 0.6, interactive: false });\r\n            return;\r\n        }\r\n        TweenMax.to(this.go, 0.3, { alpha: 1, interactive: true });\r\n        this.go.style.pointerEvents = \"auto\"\r\n    }\r\n}","\"use strict\";\r\nimport Level from \"./Level.js\";\r\nimport Stage from \"./Stage.js\";\r\n// import ProtonEffects from \"./ProtonEffects.js\";\r\nimport LogIn from \"./LogIn.js\";\r\nimport config from \"./Config.js\";\r\n\r\nexport default class App extends Stage {\r\n\r\n    constructor() {\r\n\r\n        super();\r\n\r\n        window.onload = () => {\r\n            //test!!!!!!!\r\n            // let a = document.getElementById(\"rr\")\r\n            // a.style.color = \"green\"\r\n            // alert(345)\r\n            this.config = config;\r\n            this.storageData = localStorage.getItem('match3football');\r\n\r\n            if (!config.hasLogin) {                   // REMOVES LOGIN PHASE..FOR TESTS ONLY\r\n                this.startLevel();\r\n            } else {\r\n                if (this.storageData) {\r\n                    this.checkUserData();\r\n                } else {\r\n                    this.login = new LogIn(this);\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    startLevel() {\r\n        // this.proton = new ProtonEffects(this);\r\n        this.level = new Level(this);\r\n        this.stage.addChild(this.level);\r\n    }\r\n\r\n    getLevel() {\r\n        return this.level;\r\n    }\r\n\r\n    checkUserData() {\r\n        $.ajax({\r\n            url: \"storageData\",\r\n            type: 'POST',\r\n            contentType: 'application/json',\r\n            data: JSON.stringify({ data: this.storageData }),\r\n            success: (res) => {\r\n                if (!res.authorized) {\r\n                    this.login = new LogIn(this);\r\n                } else {\r\n                    this.startLevel();\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nnew App;\r\n\r\n"]}